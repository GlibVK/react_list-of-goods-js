{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FEILD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAoB,iBAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAA0BC,EAA1B,EAAgDH,GAAY,IAAzBF,EAAwB,EAAxBA,UAC3BM,EAAa,YAAOD,GAmB1B,OAjBIL,IAAcH,GAAqBG,IAAcJ,GACnDU,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,OAASD,EAAMC,OAC9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAC7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAMcO,CACnBlB,EAAiB,CAAEK,aAAaE,GAGlC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcJ,IAJ9B,iCAUA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,QAAS,kBAAMZ,GAAcD,IAC7Bc,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAaf,IAJjB,sBAUEF,GAAaE,IACb,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAa,IAEfa,KAAK,SACLF,UAAU,4BANZ,sBAeJ,6BACG,YAAIV,GAAcc,KAAI,SAAAb,GAAK,OAC1B,oBAAI,UAAQ,OAAZ,SAAgCA,GAARA,YCnGlCc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2cbfdf08.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FEILD_ALPHABET = 'Sort alphabetically';\nconst SORT_FIELD_LENGTH = 'Sort by length';\n\nfunction getPreparedGoods(goods, { sortField }, isReverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField === SORT_FIELD_LENGTH || sortField === SORT_FEILD_ALPHABET) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        case SORT_FEILD_ALPHABET:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField }, isReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FEILD_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FEILD_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReverse(!isReverse)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setIsReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )\n        }\n\n      </div>\n\n      <ul>\n        {[...visibleGoods].map(goods => (\n          <li data-cy=\"Good\" key={goods}>{goods}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}